Contract {
    setProvider: [Function (anonymous)],
    currentProvider: [Getter/Setter],
    _requestManager: RequestManager {
      provider: HDWalletProvider {
        walletHdpath: "m/44'/60'/0'/0/",
        wallets: [Object],
        addresses: [Array],
        chainSettings: {},
        engine: [Web3ProviderEngine],
        hdwallet: [EthereumHDKey],
        initialized: [Promise],
        hardfork: 'london',
        send: [Function (anonymous)],
        _alreadyWrapped: true,
        chainId: 4
      },
      providers: {
        WebsocketProvider: [Function: WebsocketProvider],
        HttpProvider: [Function: HttpProvider],
        IpcProvider: [Function: IpcProvider]
      },
      subscriptions: Map(0) {}
    },
    givenProvider: null,
    providers: {
      WebsocketProvider: [Function: WebsocketProvider],
      HttpProvider: [Function: HttpProvider],
      IpcProvider: [Function: IpcProvider]
    },
    _provider: HDWalletProvider {
      walletHdpath: "m/44'/60'/0'/0/",
      wallets: {
        '0x6abec9175ae5ff170126f05ec2042c81371ab76b': [Wallet],
        '0xccfd1fb9f0ac11487a05898e8ae6519bd5de2009': [Wallet],
        '0xb8da66a8b4db322733a13a34c587a7eec1a22cb6': [Wallet],
        '0xcd3403975c10e933db979c93bafcfbf83c600b35': [Wallet],
        '0x824898fa7e4d66cf0a5ad3ea757063f0c598ea92': [Wallet],
        '0xae251821bc5a51fee28b8591e5dad005b4560d00': [Wallet],
        '0x70a7036bd42dd0c1e5dc72ea8be56193df2d7b4f': [Wallet],
        '0xa8bb1bb066b516a0a91245e868b3668be3229667': [Wallet],
        '0x44cb39eb44ecd1765f1bc7a92eb35c1544121968': [Wallet],
        '0x685270aa0134986724c4ae4a3c43e07826567e41': [Wallet]
      },
      addresses: [
        '0x6abec9175ae5ff170126f05ec2042c81371ab76b',
        '0xccfd1fb9f0ac11487a05898e8ae6519bd5de2009',
        '0xb8da66a8b4db322733a13a34c587a7eec1a22cb6',
        '0xcd3403975c10e933db979c93bafcfbf83c600b35',
        '0x824898fa7e4d66cf0a5ad3ea757063f0c598ea92',
        '0xae251821bc5a51fee28b8591e5dad005b4560d00',
        '0x70a7036bd42dd0c1e5dc72ea8be56193df2d7b4f',
        '0xa8bb1bb066b516a0a91245e868b3668be3229667',
        '0x44cb39eb44ecd1765f1bc7a92eb35c1544121968',
        '0x685270aa0134986724c4ae4a3c43e07826567e41'
      ],
      chainSettings: {},
      engine: Web3ProviderEngine {
        _events: [Object: null prototype],
        _eventsCount: 3,
        _maxListeners: 30,
        _blockTracker: [PollingBlockTracker],
        _ready: [Stoplight],
        currentBlock: [Object],
        _providers: [Array],
        _running: true,
        [Symbol(kCapture)]: false
      },
      hdwallet: EthereumHDKey { _hdkey: [HDKey] },
      initialized: Promise { undefined, [Symbol(async_id_symbol)]: 441 },
      hardfork: 'london',
      send: [Function (anonymous)],
      _alreadyWrapped: true,
      chainId: 4
    },
    setRequestManager: [Function (anonymous)],
    BatchRequest: [Function: bound Batch],
    extend: [Function: ex] {
      formatters: {
        inputDefaultBlockNumberFormatter: [Function: inputDefaultBlockNumberFormatter],
        inputBlockNumberFormatter: [Function: inputBlockNumberFormatter],
        inputCallFormatter: [Function: inputCallFormatter],
        inputTransactionFormatter: [Function: inputTransactionFormatter],
        inputAddressFormatter: [Function: inputAddressFormatter],       
        inputPostFormatter: [Function: inputPostFormatter],
        inputLogFormatter: [Function: inputLogFormatter],
        inputSignFormatter: [Function: inputSignFormatter],
        inputStorageKeysFormatter: [Function: inputStorageKeysFormatter],
        outputProofFormatter: [Function: outputProofFormatter],
        outputBigNumberFormatter: [Function: outputBigNumberFormatter], 
        outputTransactionFormatter: [Function: outputTransactionFormatter],
        outputTransactionReceiptFormatter: [Function: outputTransactionReceiptFormatter],
        outputBlockFormatter: [Function: outputBlockFormatter],
        outputLogFormatter: [Function: outputLogFormatter],
        outputPostFormatter: [Function: outputPostFormatter],
        outputSyncingFormatter: [Function: outputSyncingFormatter]      
      },
      utils: {
        _fireError: [Function: _fireError],
        _jsonInterfaceMethodToString: [Function: _jsonInterfaceMethodToString],
        _flattenTypes: [Function: _flattenTypes],
        randomHex: [Function: randomHex],
        BN: [Function: BNwrapped],
        isBN: [Function: isBN],
        isBigNumber: [Function: isBigNumber],
        isHex: [Function: isHex],
        isHexStrict: [Function: isHexStrict],
        sha3: [Function],
        sha3Raw: [Function: sha3Raw],
        keccak256: [Function],
        soliditySha3: [Function: soliditySha3],
        soliditySha3Raw: [Function: soliditySha3Raw],
        encodePacked: [Function: encodePacked],
        isAddress: [Function: isAddress],
        checkAddressChecksum: [Function: checkAddressChecksum],
        toChecksumAddress: [Function: toChecksumAddress],
        toHex: [Function: toHex],
        toBN: [Function: toBN],
        bytesToHex: [Function: bytesToHex],
        hexToBytes: [Function: hexToBytes],
        hexToNumberString: [Function: hexToNumberString],
        hexToNumber: [Function: hexToNumber],
        toDecimal: [Function: hexToNumber],
        numberToHex: [Function: numberToHex],
        fromDecimal: [Function: numberToHex],
        hexToUtf8: [Function: hexToUtf8],
        hexToString: [Function: hexToUtf8],
        toUtf8: [Function: hexToUtf8],
        stripHexPrefix: [Function: stripHexPrefix],
        utf8ToHex: [Function: utf8ToHex],
        stringToHex: [Function: utf8ToHex],
        fromUtf8: [Function: utf8ToHex],
        hexToAscii: [Function: hexToAscii],
        toAscii: [Function: hexToAscii],
        asciiToHex: [Function: asciiToHex],
        fromAscii: [Function: asciiToHex],
        unitMap: [Object],
        toWei: [Function: toWei],
        fromWei: [Function: fromWei],
        padLeft: [Function: leftPad],
        leftPad: [Function: leftPad],
        padRight: [Function: rightPad],
        rightPad: [Function: rightPad],
        toTwosComplement: [Function: toTwosComplement],
        isBloom: [Function: isBloom],
        isUserEthereumAddressInBloom: [Function: isUserEthereumAddressInBloom],
        isContractAddressInBloom: [Function: isContractAddressInBloom], 
        isTopic: [Function: isTopic],
        isTopicInBloom: [Function: isTopicInBloom],
        isInBloom: [Function: isInBloom],
        compareBlockNumbers: [Function: compareBlockNumbers],
        toNumber: [Function: toNumber]
      },
      Method: [Function: Method]
    },
    clearSubscriptions: [Function (anonymous)],
    options: { address: [Getter/Setter], jsonInterface: [Getter/Setter] 
  },
    handleRevert: [Getter/Setter],
    defaultCommon: [Getter/Setter],
    defaultHardfork: [Getter/Setter],
    defaultChain: [Getter/Setter],
    transactionPollingTimeout: [Getter/Setter],
    transactionPollingInterval: [Getter/Setter],
    transactionConfirmationBlocks: [Getter/Setter],
    transactionBlockTimeout: [Getter/Setter],
    blockHeaderTimeout: [Getter/Setter],
    defaultAccount: [Getter/Setter],
    defaultBlock: [Getter/Setter],
    methods: {
      name: [Function: bound _createTxObject],
      '0x06fdde03': [Function: bound _createTxObject],
      'name()': [Function: bound _createTxObject],
      approve: [Function: bound _createTxObject],
      '0x095ea7b3': [Function: bound _createTxObject],
      'approve(address,uint256)': [Function: bound _createTxObject],    
      totalSupply: [Function: bound _createTxObject],
      '0x18160ddd': [Function: bound _createTxObject],
      'totalSupply()': [Function: bound _createTxObject],
      transferFrom: [Function: bound _createTxObject],
      '0x23b872dd': [Function: bound _createTxObject],
      'transferFrom(address,address,uint256)': [Function: bound _createTxObject],
      standard: [Function: bound _createTxObject],
      '0x5a3b7e42': [Function: bound _createTxObject],
      'standard()': [Function: bound _createTxObject],
      balanceOf: [Function: bound _createTxObject],
      '0x70a08231': [Function: bound _createTxObject],
      'balanceOf(address)': [Function: bound _createTxObject],
      symbol: [Function: bound _createTxObject],
      '0x95d89b41': [Function: bound _createTxObject],
      'symbol()': [Function: bound _createTxObject],
      transfer: [Function: bound _createTxObject],
      '0xa9059cbb': [Function: bound _createTxObject],
      'transfer(address,uint256)': [Function: bound _createTxObject],   
      allowance: [Function: bound _createTxObject],
      '0xdd62ed3e': [Function: bound _createTxObject],
      'allowance(address,address)': [Function: bound _createTxObject]   
    },
    events: {
      Transfer: [Function: bound ],
      '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef': [Function: bound ],
      'Transfer(address,address,uint256)': [Function: bound ],
      Approval: [Function: bound ],
      '0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925': [Function: bound ],
      'Approval(address,address,uint256)': [Function: bound ],
      allEvents: [Function: bound ]
    },
    _address: '0xD9636ce07F5Fa2e2EC94E241237F57Adffe6062e',
    _jsonInterface: [
      {
        constant: true,
        inputs: [],
        name: 'name',
        outputs: [Array],
        payable: false,
        type: 'function',
        signature: '0x06fdde03'
      },
      {
        constant: false,
        inputs: [Array],
        name: 'approve',
        outputs: [Array],
        payable: false,
        type: 'function',
        signature: '0x095ea7b3'
      },
      {
        constant: true,
        inputs: [],
        name: 'totalSupply',
        outputs: [Array],
        payable: false,
        type: 'function',
        signature: '0x18160ddd'
      },
      {
        constant: false,
        inputs: [Array],
        name: 'transferFrom',
        outputs: [Array],
        payable: false,
        type: 'function',
        signature: '0x23b872dd'
      },
      {
        constant: true,
        inputs: [],
        name: 'standard',
        outputs: [Array],
        payable: false,
        type: 'function',
        signature: '0x5a3b7e42'
      },
      {
        constant: true,
        inputs: [Array],
        name: 'balanceOf',
        outputs: [Array],
        payable: false,
        type: 'function',
        signature: '0x70a08231'
      },
      {
        constant: true,
        inputs: [],
        name: 'symbol',
        outputs: [Array],
        payable: false,
        type: 'function',
        signature: '0x95d89b41'
      },
      {
        constant: false,
        inputs: [Array],
        name: 'transfer',
        outputs: [Array],
        payable: false,
        type: 'function',
        signature: '0xa9059cbb'
      },
      {
        constant: true,
        inputs: [Array],
        name: 'allowance',
        outputs: [Array],
        payable: false,
        type: 'function',
        signature: '0xdd62ed3e'
      },
      {
        inputs: [Array],
        type: 'constructor',
        constant: undefined,
        payable: undefined
      },
      {
        anonymous: false,
        inputs: [Array],
        name: 'Transfer',
        type: 'event',
        constant: undefined,
        payable: undefined,
        signature: '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef'
      },
      {
        anonymous: false,
        inputs: [Array],
        name: 'Approval',
        type: 'event',
        constant: undefined,
        payable: undefined,
        signature: '0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925'
      }
    ]
  }